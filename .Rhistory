geom_density(color = "black", fill = "steelblue", alpha = 0.6)
})
output$plot2 <- renderPlot({
cardiac %>%
ggplot(aes_string(x="region", fill=input$x))+
geom_bar(position="dodge", alpha=0.8, color="black")+
labs(x=NULL, y=NULL, fill="Fill Variable")
})
output$plot3a <- renderPlot({
sites_per_year %>%
filter(hospital_name == input$y) %>%
ggplot(aes_string(x="year_of_hospital_discharge", y = "number_of_cases"))+
coord_flip()+
geom_col(alpha=0.8, color="black")+
labs(x=NULL, y=NULL)
})
output$plot3b <- renderPlot({
sites_with_ranges %>%
filter(hospital_name == input$y) %>%
ggplot(aes_string(x="year_of_hospital_discharge", y = "number_of_cases"))+
coord_flip()+
geom_col(alpha=0.8, color="black")+
labs(x=NULL, y=NULL)
})
}
shinyApp(ui, server)
library(shinydashboard)
ui <- dashboardPage(skin = "purple",
dashboardHeader(title = "Cardiac Dashboard"),
## Sidebar content
dashboardSidebar(
sidebarMenu(
menuItem("Observed Mortality Rate",
tabName = "dashboard",
icon = icon("dashboard")),
menuItem("Counts",
tabName = "widgets",
icon = icon("th")),
menuItem("Cases",
tabName = "cases",
icon = icon("folder-open")),
menuItem("Hospital Map",
tabName = "map",
icon = icon("earth-americas"))
)
),
## Body content
dashboardBody(
tabItems(
## First tab content
tabItem(tabName = "dashboard",
fluidRow(
box(plotOutput("plot1", height = 250)), # box is a container for the plot
box(title = "Controls", # box is a container for the controls
selectInput("region",
"Select Region of Interest:",
choices=unique(cardiac$region))
)
)
),
## Second tab item
tabItem(tabName = "widgets",
fluidRow(
box(plotOutput("plot2", height = 250)), # box is a container for the plot
box(title = "Controls", # box is a container for the controls
radioButtons("x",
"Select Fill Variable",
choices=c("region", "procedure"),
selected="region")
)
)
),
## Third tab item
tabItem(tabName = "cases",
fluidRow(
box(plotOutput("plot3a", height = 250)), # box is a container for the plot
box(title = "Controls", # box is a container for the controls
selectInput("y",
"Select Hospital",
choices=c(unique(cardiac$hospital_name))
)
)
),
fluidRow(
box(plotOutput("plot3b", height = 250)), # box is a container for the plot
box(title = "Controls", # box is a container for the controls
selectInput("y",
"Select Hospital",
choices=c(unique(cardiac$hospital_name))
)
)
)
),
tabItem(tabName = "map",
fluidRow(
box(plotOutput("plot4", height = 250)),
box(title = "Controls",
selectInput("z",
"Select Region",
choices = c(unique(cardiac$region))
)
)
)
)
)
)
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot1 <- renderPlot({
cardiac %>%
filter(region == input$region) %>%
ggplot(aes(x = observed_mortality_rate)) +
geom_density(color = "black", fill = "steelblue", alpha = 0.6)
})
output$plot2 <- renderPlot({
cardiac %>%
ggplot(aes_string(x="region", fill=input$x))+
geom_bar(position="dodge", alpha=0.8, color="black")+
labs(x=NULL, y=NULL, fill="Fill Variable")
})
output$plot3a <- renderPlot({
sites_per_year %>%
filter(hospital_name == input$y) %>%
group_by(year_of_hospital_discharge) %>%
ggplot(aes_string(x="year_of_hospital_discharge", y = "number_of_cases"))+
coord_flip()+
geom_col(alpha=0.8, color="black")+
labs(x=NULL, y=NULL)
})
output$plot3b <- renderPlot({
sites_with_ranges %>%
filter(hospital_name == input$y) %>%
group_by(year_of_hospital_discharge) %>%
ggplot(aes_string(x="year_of_hospital_discharge", y = "number_of_cases"))+
coord_flip()+
geom_col(alpha=0.8, color="black")+
labs(x=NULL, y=NULL)
})
}
shinyApp(ui, server)
library(shinydashboard)
ui <- dashboardPage(skin = "purple",
dashboardHeader(title = "Cardiac Dashboard"),
## Sidebar content
dashboardSidebar(
sidebarMenu(
menuItem("Observed Mortality Rate",
tabName = "dashboard",
icon = icon("dashboard")),
menuItem("Counts",
tabName = "widgets",
icon = icon("th")),
menuItem("Cases",
tabName = "cases",
icon = icon("folder-open")),
menuItem("Hospital Map",
tabName = "map",
icon = icon("earth-americas"))
)
),
## Body content
dashboardBody(
tabItems(
## First tab content
tabItem(tabName = "dashboard",
fluidRow(
box(plotOutput("plot1", height = 250)), # box is a container for the plot
box(title = "Controls", # box is a container for the controls
selectInput("region",
"Select Region of Interest:",
choices=unique(cardiac$region))
)
)
),
## Second tab item
tabItem(tabName = "widgets",
fluidRow(
box(plotOutput("plot2", height = 250)), # box is a container for the plot
box(title = "Controls", # box is a container for the controls
radioButtons("x",
"Select Fill Variable",
choices=c("region", "procedure"),
selected="region")
)
)
),
## Third tab item
tabItem(tabName = "cases",
fluidRow(
box(plotOutput("plot3a", height = 250)), # box is a container for the plot
box(title = "Controls", # box is a container for the controls
selectInput("y",
"Select Hospital",
choices=c(unique(cardiac$hospital_name))
)
)
),
fluidRow(
box(plotOutput("plot3b", height = 250)), # box is a container for the plot
box(title = "Controls", # box is a container for the controls
selectInput("y",
"Select Hospital",
choices=c(unique(cardiac$hospital_name))
)
)
)
),
tabItem(tabName = "map",
fluidRow(
box(plotOutput("plot4", height = 250)),
box(title = "Controls",
selectInput("z",
"Select Region",
choices = c(unique(cardiac$region))
)
)
)
)
)
)
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot1 <- renderPlot({
cardiac %>%
filter(region == input$region) %>%
ggplot(aes(x = observed_mortality_rate)) +
geom_density(color = "black", fill = "steelblue", alpha = 0.6)
})
output$plot2 <- renderPlot({
cardiac %>%
ggplot(aes_string(x="region", fill=input$x))+
geom_bar(position="dodge", alpha=0.8, color="black")+
labs(x=NULL, y=NULL, fill="Fill Variable")
})
output$plot3a <- renderPlot({
sites_per_year %>%
filter(hospital_name == input$y) %>%
group_by(year_of_hospital_discharge) %>%
summarize(total_cases = sum(cases)) %>%
ggplot(aes_string(x="year_of_hospital_discharge", y = "total_cases"))+
coord_flip()+
geom_col(alpha=0.8, color="black")+
labs(x=NULL, y=NULL)
})
output$plot3b <- renderPlot({
sites_with_ranges %>%
filter(hospital_name == input$y) %>%
group_by(year_of_hospital_discharge) %>%
ggplot(aes_string(x="year_of_hospital_discharge", y = "number_of_cases"))+
coord_flip()+
geom_col(alpha=0.8, color="black")+
labs(x=NULL, y=NULL)
})
}
shinyApp(ui, server)
sites_per_year %>%
filter(hospital_name == input$y) %>%
group_by(year_of_hospital_discharge) %>%
summarize(total_cases = sum(cases)) %>%
ggplot(aes_string(x="year_of_hospital_discharge", y = "total_cases"))+
coord_flip()+
geom_col(alpha=0.8, color="black")+
labs(x=NULL, y=NULL)
sites_per_year %>%
group_by(year_of_hospital_discharge) %>%
summarize(total_cases = sum(cases)) %>%
ggplot(aes_string(x="year_of_hospital_discharge", y = "total_cases"))+
coord_flip()+
geom_col(alpha=0.8, color="black")+
labs(x=NULL, y=NULL)
sites_per_year %>%
group_by(year_of_hospital_discharge) %>%
summarize(total_cases = sum(number_of_cases)) %>%
ggplot(aes_string(x="year_of_hospital_discharge", y = "total_cases"))+
coord_flip()+
geom_col(alpha=0.8, color="black")+
labs(x=NULL, y=NULL)
library(shinydashboard)
ui <- dashboardPage(skin = "purple",
dashboardHeader(title = "Cardiac Dashboard"),
## Sidebar content
dashboardSidebar(
sidebarMenu(
menuItem("Observed Mortality Rate",
tabName = "dashboard",
icon = icon("dashboard")),
menuItem("Counts",
tabName = "widgets",
icon = icon("th")),
menuItem("Cases",
tabName = "cases",
icon = icon("folder-open")),
menuItem("Hospital Map",
tabName = "map",
icon = icon("earth-americas"))
)
),
## Body content
dashboardBody(
tabItems(
## First tab content
tabItem(tabName = "dashboard",
fluidRow(
box(plotOutput("plot1", height = 250)), # box is a container for the plot
box(title = "Controls", # box is a container for the controls
selectInput("region",
"Select Region of Interest:",
choices=unique(cardiac$region))
)
)
),
## Second tab item
tabItem(tabName = "widgets",
fluidRow(
box(plotOutput("plot2", height = 250)), # box is a container for the plot
box(title = "Controls", # box is a container for the controls
radioButtons("x",
"Select Fill Variable",
choices=c("region", "procedure"),
selected="region")
)
)
),
## Third tab item
tabItem(tabName = "cases",
fluidRow(
box(plotOutput("plot3a", height = 250)), # box is a container for the plot
box(title = "Controls", # box is a container for the controls
selectInput("y",
"Select Hospital",
choices=c(unique(cardiac$hospital_name))
)
)
),
fluidRow(
box(plotOutput("plot3b", height = 250)), # box is a container for the plot
box(title = "Controls", # box is a container for the controls
selectInput("y",
"Select Hospital",
choices=c(unique(cardiac$hospital_name))
)
)
)
),
tabItem(tabName = "map",
fluidRow(
box(plotOutput("plot4", height = 250)),
box(title = "Controls",
selectInput("z",
"Select Region",
choices = c(unique(cardiac$region))
)
)
)
)
)
)
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot1 <- renderPlot({
cardiac %>%
filter(region == input$region) %>%
ggplot(aes(x = observed_mortality_rate)) +
geom_density(color = "black", fill = "steelblue", alpha = 0.6)
})
output$plot2 <- renderPlot({
cardiac %>%
ggplot(aes_string(x="region", fill=input$x))+
geom_bar(position="dodge", alpha=0.8, color="black")+
labs(x=NULL, y=NULL, fill="Fill Variable")
})
output$plot3a <- renderPlot({
sites_per_year %>%
filter(hospital_name == input$y) %>%
group_by(year_of_hospital_discharge) %>%
summarize(total_cases = sum(number_of_cases)) %>%
ggplot(aes_string(x="year_of_hospital_discharge", y = "total_cases"))+
coord_flip()+
geom_col(alpha=0.8, color="black")+
labs(x=NULL, y=NULL)
})
output$plot3b <- renderPlot({
sites_with_ranges %>%
filter(hospital_name == input$y) %>%
group_by(year_of_hospital_discharge) %>%
ggplot(aes_string(x="year_of_hospital_discharge", y = "number_of_cases"))+
coord_flip()+
geom_col(alpha=0.8, color="black")+
labs(x=NULL, y=NULL)
})
}
shinyApp(ui, server)
library(shinydashboard)
ui <- dashboardPage(skin = "purple",
dashboardHeader(title = "Cardiac Dashboard"),
## Sidebar content
dashboardSidebar(
sidebarMenu(
menuItem("Observed Mortality Rate",
tabName = "dashboard",
icon = icon("dashboard")),
menuItem("Counts",
tabName = "widgets",
icon = icon("th")),
menuItem("Cases",
tabName = "cases",
icon = icon("folder-open")),
menuItem("Hospital Map",
tabName = "map",
icon = icon("earth-americas"))
)
),
## Body content
dashboardBody(
tabItems(
## First tab content
tabItem(tabName = "dashboard",
fluidRow(
box(plotOutput("plot1", height = 250)), # box is a container for the plot
box(title = "Controls", # box is a container for the controls
selectInput("region",
"Select Region of Interest:",
choices=unique(cardiac$region))
)
)
),
## Second tab item
tabItem(tabName = "widgets",
fluidRow(
box(plotOutput("plot2", height = 250)), # box is a container for the plot
box(title = "Controls", # box is a container for the controls
radioButtons("x",
"Select Fill Variable",
choices=c("region", "procedure"),
selected="region")
)
)
),
## Third tab item
tabItem(tabName = "cases",
fluidRow(
box(plotOutput("plot3a", height = 250)), # box is a container for the plot
box(title = "Controls", # box is a container for the controls
selectInput("y",
"Select Hospital",
choices=c(unique(cardiac$hospital_name))
)
)
),
fluidRow(
box(plotOutput("plot3b", height = 250)), # box is a container for the plot
box(title = "Controls", # box is a container for the controls
selectInput("y",
"Select Hospital",
choices=c(unique(cardiac$hospital_name))
)
)
)
),
tabItem(tabName = "map",
fluidRow(
box(plotOutput("plot4", height = 250)),
box(title = "Controls",
selectInput("z",
"Select Region",
choices = c(unique(cardiac$region))
)
)
)
)
)
)
)
server <- function(input, output, session) {
session$onSessionEnded(stopApp)
output$plot1 <- renderPlot({
cardiac %>%
filter(region == input$region) %>%
ggplot(aes(x = observed_mortality_rate)) +
geom_density(color = "black", fill = "steelblue", alpha = 0.6)
})
output$plot2 <- renderPlot({
cardiac %>%
ggplot(aes_string(x="region", fill=input$x))+
geom_bar(position="dodge", alpha=0.8, color="black")+
labs(x=NULL, y=NULL, fill="Fill Variable")
})
output$plot3a <- renderPlot({
sites_per_year %>%
filter(hospital_name == input$y) %>%
group_by(year_of_hospital_discharge) %>%
summarize(total_cases = sum(number_of_cases)) %>%
ggplot(aes_string(x="year_of_hospital_discharge", y = "total_cases"))+
coord_flip()+
geom_col(alpha=0.8, color="black")+
labs(x=NULL, y=NULL)
})
output$plot3b <- renderPlot({
sites_with_ranges %>%
filter(hospital_name == input$y) %>%
group_by(year_of_hospital_discharge) %>%
summarize(total_cases_b = sum(number_of_cases)) %>%
ggplot(aes_string(x="year_of_hospital_discharge", y = "total_cases_b"))+
coord_flip()+
geom_col(alpha=0.8, color="black")+
labs(x=NULL, y=NULL)
})
}
shinyApp(ui, server)
